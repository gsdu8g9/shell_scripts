#!/bin/bash
#
# shell script to make netcat+tar file transfer similar to scp

printUsage()
{
cat <<EOF

NAME
    ncp - Super fast netcat + tar file transfer script

SYNOPSIS
    `basename $0` [OPTIONS] [FILE...] [USER@IP:DEST_DIR]

OPTIONS
    -c
        Enable compression during data transfer (suitable for transferring text)

    -h
        Print command usage and exit

EOF
}

# default values for options
enable_compression=0

# get user values for options
while getopts ":ch" opt; do
    case $opt in
        c) enable_compression=1 ;;
        h) printUsage; exit 0 ;;
        *) echo -e "\nInvalid option : -${OPTARG}\n"; exit 1 ;;
    esac
done
shift $((OPTIND-1))

# apart from options, there must be minimum two arguments
if [ $# -lt 2 ]; then
    echo -e "\nMinimum two arguments required : [FILE...] [USER@IP:DEST_DIR]\n"
    exit 1
fi

# parse remaining array of arguments
ARGS=("$@")                    # make a copy of the remaining array of arguments
DEST=${ARGS[-1]}               # last element of the remaining array contains the destination info
user=$(echo $DEST | awk -F'@' '{print $1}')
ip=$(echo $DEST | awk -F'@' '{print $2}' | awk -F':' '{print $1}')
dest=$(echo $DEST | awk -F'@' '{print $2}' | awk -F':' '{print $2}')
# check validity of destination info
if [[ "$user" == "" ]] || [[ "$ip" == "" ]] || [[ "$dest" == "" ]]; then
    echo -e "\nDestination info (last argument) is incorrect\nShould be of the form [USER@IP:DEST_DIR]\n"
    exit 1
fi
unset ARGS[${#ARGS[@]}-1]      # remove the last element of the array
src=("${ARGS[@]}")             # remaining array contains the src files and directories to be transferred

# sanity checks
echo "sanity checks in progress..."

ping -c 1 -w 10 $ip &>/dev/null
if [ $? -ne 0 ]; then
    echo "ERROR : cannot connect to $ip"
    exit 1
fi

which pv &>/dev/null
if [ $? -ne 0 ]; then
    echo "ERROR : please install 'pv' on src before using this script"
    exit 1
fi

ssh $user@$ip 'which screen' &>/dev/null
if [ $? -ne 0 ]; then
    echo "ERROR : please install 'screen' on destination before using this script"
    exit 1
fi

for i in "${src[@]}"; do
    if [[ (! -d "$i") && (! -f "$i") ]]; then
        echo "ERROR : $i : no such file or directory"
        exit 1
    fi
done

ssh $user@$ip "ls $dest" &>/dev/null
if [ $? -ne 0 ]; then
    ssh $user@$ip "mkdir -p $dest" &>/dev/null
    if [ $? -ne 0 ]; then
        echo "unable to create directory $dest at destination"
        exit 1
    fi
    echo "created directory $dest"
fi

echo "sanity checks complete..."

nct_transfer_done=false

# transfer data
for i in "${src[@]}"; do
    # start netcat at destination
    if [ $enable_compression -eq 0 ]; then
        $nct_transfer_done || echo "nc -l -p 12345 | tar xf - -C $dest" > /tmp/nct_nocompress.sh
        $nct_transfer_done || scp /tmp/nct_nocompress.sh $user@$ip:/tmp/ &>/dev/null
        ssh -f $user@$ip "screen -dm -S netcat sh /tmp/nct_nocompress.sh"
    else
        $nct_transfer_done || echo "nc -l -p 12345 | tar xzf - -C $dest" > /tmp/nct_compress.sh
        $nct_transfer_done || scp /tmp/nct_compress.sh $user@$ip:/tmp/ &>/dev/null
        ssh -f $user@$ip "screen -dm -S netcat sh /tmp/nct_compress.sh"
    fi

    nct_transfer_done=true

    if [ $? -ne 0 ]; then
        echo "ERROR : unable to start netcat at destination"
        ssh $user@$ip "killall nc tar" &>/dev/null
        ssh $user@$ip "screen -S netcat -X quit" &>/dev/null
        exit 1
    fi
    echo "started netcat at destination"
    sleep 1s

    # transfer data
    echo "[$i] data transfer in progress..."
    dn=$(dirname "$i")
    bn=$(basename "$i")
    cd "$dn"

    if [ $enable_compression -eq 0 ]; then
        tar cf - "$bn" | pv -s $(du -sb "$bn" | awk '{print $1}') | nc $ip 12345 &>/dev/null
    else
        tar czf - "$bn" | pv -s $(du -sb "$bn" | awk '{print $1}') | nc $ip 12345 &>/dev/null
    fi

    if [ $? -ne 0 ]; then
        echo "ERROR : something went wrong at src"
        ssh $user@$ip "killall nc tar" &>/dev/null
        ssh $user@$ip "screen -S netcat -X quit" &>/dev/null
        exit 1
    fi
    echo "[$i] data transfer completed..."
done

# kill netcat screen session on remote
ssh $user@$ip "killall nc tar" &>/dev/null
ssh $user@$ip "screen -S netcat -X quit" &>/dev/null
